trigger: none

pool:
  vmImage: windows-latest

stages:
  - stage: Build
    displayName: 'Build'
    jobs:
    - deployment: Build
      #displayName: ApprovalForPRODDeployment
      environment: eshoponweb build
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
  
            - task: DotNetCoreCLI@2
              displayName: Restore
              inputs:
                command: restore
                projects: '**/*.csproj'

            - task: DotNetCoreCLI@2
              displayName: Build
              inputs:
                projects: Everything.sln
                arguments: '--configuration $(BuildConfiguration)'
            
            - task: PublishBuildArtifacts@1
              displayName: 'Publish Artifact'
              inputs:
                PathtoPublish: '$(build.artifactstagingdirectory)'
              #condition: succeededOrFailed()


  - stage: Test
    displayName: 'Test'
    jobs:
    - deployment: UnitTesting
      #displayName: ApprovalForPRODDeployment
      environment: Unit Testing
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self

            - task: DotNetCoreCLI@2
              displayName: Test
              inputs:
                command: test
                projects: '**/*[Tt]ests/*.csproj'
                arguments: '--configuration $(BuildConfiguration)'

            - task: DotNetCoreCLI@2
              displayName: Publish
              inputs:
                command: publish
                publishWebProjects: True
                arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
                zipAfterPublish: True
            
            # - task: CopyFiles@2
            #   displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
            #   inputs:
            #     SourceFolder: DBscripts/
            #     Contents: |
            #       CatalogDB.sql
            #       IdentityDB.sql
            #     TargetFolder: '$(build.artifactstagingdirectory)'
            
            - task: CopyFiles@2
              displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
              inputs:
                SourceFolder: env/eshopenv/
                Contents: |
                  eShopOnWeb.param.json
                  eShopOnWebResource.json
                TargetFolder: '$(build.artifactstagingdirectory)'
            - task: PublishBuildArtifacts@1
              displayName: 'Publish Artifact'
              inputs:
                PathtoPublish: '$(build.artifactstagingdirectory)'
              #condition: succeededOrFailed()

  - stage: DEV
    displayName: 'Deployment to DEV'
    jobs:
     - job: 'Creating_Infra'
       steps:
       - download: current
         artifact: drop

       - task: AzureResourceGroupDeployment@2
         displayName: 'ARM Template deployment: Resource Group scope'
         inputs:
            azureSubscription: 'Visual Studio Enterprise Subscription – MPN (b6f408e9-b240-412d-b83d-1ec4fc938ee8)'
            resourceGroupName: '$(eshop_ServerName)'
            location: 'Southeast Asia'
            csmFile: '$(Agent.BuildDirectory)/drop/eShopOnWebResource.json'
            csmParametersFile: '$(Agent.BuildDirectory)/drop/eShopOnWeb.param.json'
            overrideParameters: '-WebsiteName $(WebsiteName) -eshop_ServerName $(eshop_ServerName)'
        
     - job: 'AppService_Deployment'
       dependsOn:
         - Creating_Infra
       steps:
       - download: current
         artifact: drop
      
       - task: AzureWebApp@1
         displayName: 'Azure Web App Deploy: eshop1a2b'
         inputs:
           azureSubscription: 'Visual Studio Enterprise Subscription – MPN (b6f408e9-b240-412d-b83d-1ec4fc938ee8)'
           appType: webApp
           appName: eshop1a2b
           package: '$(Agent.BuildDirectory)/drop/Web.zip'
      
    #  - job: 'Database_Deployment'
    #    dependsOn:
    #      - AppService_Deployment
    #    steps:
    #    - download: current
    #      artifact: drop
      #  - task: SqlAzureDacpacDeployment@1
      #    displayName: 'Azure SQL SqlTask'
      #    inputs:
      #     azureSubscription: 'Visual Studio Enterprise Subscription – MPN (b6f408e9-b240-412d-b83d-1ec4fc938ee8)'
      #     ServerName: '$(eshop_ServerName).database.windows.net,1433'
      #     DatabaseName: CatalogDB
      #     SqlUsername: '$(DBUSER)'
      #     SqlPassword: '$(DBPASS)'
      #     deployType: SqlTask
      #     SqlFile: '$(Agent.BuildDirectory)/drop/CatalogDB.sql'
      
      #  - task: SqlAzureDacpacDeployment@1
      #    displayName: 'Azure SQL SqlTask'
      #    inputs:
      #     azureSubscription: 'Visual Studio Enterprise Subscription – MPN (b6f408e9-b240-412d-b83d-1ec4fc938ee8)'
      #     ServerName: '$(eshop_ServerName).database.windows.net,1433'
      #     DatabaseName: IdentityDB
      #     SqlUsername: '$(DBUSER)'
      #     SqlPassword: '$(DBPASS)'
      #     deployType: SqlTask
      #     SqlFile: '$(Agent.BuildDirectory)/drop/IdentityDB.sql'